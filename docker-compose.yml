version: "3.8"
services:
  webserver:
    image: apache/airflow:2.6.0-python3.9
    command: webserver
    entrypoint: [ "/opt/airflow/script/entrypoint.sh" ]
    depends_on:
      - postgres
      - chrome
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__WEBSERVER_BASE_URL=http://localhost:8080
      - AIRFLOW__WEBSERVER__SECRET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
    deploy:
      resources:
        limits:
          cpus: "1.5"  # Limit to 1.5 CPU cores
          memory: 3g   # Limit memory to 3GB
        reservations:
          cpus: "1.0"  # Minimum of 1 CPU
          memory: 1.5g # Minimum memory of 1.5GB
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./script/entrypoint.sh:/opt/airflow/script/entrypoint.sh
      - ./requirements.txt:/opt/airflow/requirements.txt
      - ./data:/opt/airflow/data
      - ./pipelines:/opt/airflow/pipelines
      - /dev/shm:/dev/shm
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always
    networks:
      - football

  chrome:
    image: selenium/standalone-chrome
    ports:
      - "4444:4444"
    volumes:
      - /dev/shm:/dev/shm
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:4444"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 1m
    environment:
      - SE_NODE_MAX_SESSIONS=5
      - SE_NODE_SESSION_TIMEOUT=999999
    deploy:
      resources:
        limits:
          cpus: "2.0"  # Limit to 2 CPU cores for Chrome
          memory: 4g   # Limit memory to 4GB for Chrome
        reservations:
          cpus: "1.0"  # Minimum of 1 CPU
          memory: 2g   # Minimum memory of 2GB
    networks:
      - football
    restart: always

  postgres:
    image: postgres:14.0
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./data:/opt/airflow/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    ports:
      - "5432:5432"
    logging:
      options:
        max-size: 10m
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: "1"    # Limit to 1 CPU core for Postgres
          memory: 1g   # Limit memory to 1GB
        reservations:
          cpus: "0.2"  # Minimum of 0.2 CPU cores
          memory: 512m # Minimum memory of 512MB
    networks:
      - football
    restart: always

  streamlit:
    image: python:3.9
    command: bash -c "run /opt/airflow/include/streamlit_app.py --server.port=8502 --server.enableWebsocketCompression=false --server.enableCORS=false"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./pipelines:/opt/airflow/pipelines
      - ./include:/opt/airflow/include
    ports:
      - "8502:8502"
    networks:
      - football

  scheduler:
    image: apache/airflow:2.6.0-python3.9
    depends_on:
      - webserver
      - chrome  
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/opt/airflow/requirements.txt
      - ./data:/opt/airflow/data
      - ./pipelines:/opt/airflow/pipelines
    environment:
      - LOAD_EX=n
      - Executor=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__WEBSERVER_BASE_URL=http://localhost:8080
      - AIRFLOW__WEBSERVER__SECRET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
    deploy:
      resources:
        limits:
          cpus: "1.5"  # Limit to 1.5 CPU cores
          memory: 2.5g # Limit memory to 2.5GB
        reservations:
          cpus: "1.0"  # Minimum of 1 CPU
          memory: 1.5g # Minimum memory of 1.5GB
    command: bash -c "pip install --no-cache-dir -r ./requirements.txt && airflow db upgrade && airflow scheduler"
    networks:
      - football
    restart: always

networks:
  football:

volumes:
  postgres-db-volume:
